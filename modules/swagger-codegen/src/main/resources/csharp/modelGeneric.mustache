    /// <summary>
    /// {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
    /// </summary>
    {{#generatePropertyChanged}}
    [ImplementPropertyChanged]
    {{/generatePropertyChanged}}
    {{>visibility}} class {{classname}} : {{#parent}}{{{parent}}}, {{/parent}} IEquatable<{{classname}}>{{^netStandard}}{{#validatable}}{{/validatable}}{{/netStandard}}
    {
        {{#vars}}
        {{#items.isEnum}}
        {{#items}}
        {{^complexType}}
{{>modelInnerEnum}}
        {{/complexType}}
        {{/items}}
        {{/items.isEnum}}
        {{#isEnum}}
        {{^complexType}}
{{>modelInnerEnum}}
        {{/complexType}}
        {{/isEnum}}
        {{#isEnum}}
        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{description}}</value>
        {{/description}}
        [JsonSerializable("{{baseName}}")]
        public {{#complexType}}{{{complexType}}}{{/complexType}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}{{/required}}{{/isContainer}} {{name}} { get; set; }
        {{/isEnum}}
        {{/vars}}
    
        {{#vars}}
        {{^isInherited}}
        {{^isEnum}}

        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
        /// </summary>{{#description}}
        /// <value>{{description}}</value>{{/description}}
        [JsonSerializable("{{baseName}}")]
        {{#isContainer}}//TODO serializable container type{{/isContainer}}
        public {{{datatype}}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }
       
        {{/isEnum}}
        {{/isInherited}}
        {{/vars}}

    {{#hasRequired}}
    {{^hasOnlyReadOnly}}    
        /// <summary>
        /// Initializes a new instance of the <see cref="{{classname}}" /> class.
        /// </summary>
        protected {{classname}}() { }
    {{/hasOnlyReadOnly}}
    {{/hasRequired}}
        
        /// <summary>
        /// Initializes a new instance of the <see cref="{{classname}}" /> class.
        /// </summary>
        {{#vars}}
        {{^isReadOnly}}
        /// <param name="{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}">{{#description}}{{description}}{{/description}}{{^description}}{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}{{/description}}{{#required}} (required){{/required}}{{#defaultValue}} (default to {{defaultValue}}){{/defaultValue}}.</param>
        {{/isReadOnly}}
        {{/vars}}
        public {{classname}}({{#readWriteVars}}{{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}{{^required}}{{/required}}{{/isContainer}}{{/isEnum}} {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} = {{#defaultValue}}{{{defaultValue}}}{{/defaultValue}}{{^defaultValue}}default({{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}{{^required}}{{/required}}{{/isContainer}}{{/isEnum}}){{/defaultValue}}{{^-last}}, {{/-last}}{{/readWriteVars}}){{#parent}} : base({{#parentVars}}{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}{{#hasMore}}, {{/hasMore}}{{/parentVars}}){{/parent}}
        {
            {{#vars}}
            {{^isInherited}}
            {{^isReadOnly}}
            {{#required}}
            // to ensure "{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}" is required (not null)
            if ({{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} == null)
            {
                throw new InvalidDataException("{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} is a required property for {{classname}} and cannot be null");
            }
            else
            {
                this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};
            }
            {{/required}}
            {{/isReadOnly}}
            {{/isInherited}}
            {{/vars}}
            {{#vars}}
            {{^isInherited}}
            {{^isReadOnly}}
            {{^required}}
            {{#defaultValue}}// use default value if no "{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}" provided
            if ({{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} == null)
            {
                this.{{name}} = {{{defaultValue}}};
            }
            else
            {
                this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};
            }

            
            {{/defaultValue}}
            {{^defaultValue}}
this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};
            {{/defaultValue}}
            {{/required}}
            {{/isReadOnly}}
            {{/isInherited}}
            {{/vars}}
        }
               

    
{{^netStandard}}

{{/netStandard}}
    }
